var documenterSearchIndex = {"docs":
[{"location":"functions.html#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"","category":"page"},{"location":"functions.html","page":"Functions","title":"Functions","text":"Modules = [PortfolioAnalytics]","category":"page"},{"location":"functions.html#PortfolioAnalytics.MeanReturn-Tuple{TSFrames.TSFrame}","page":"Functions","title":"PortfolioAnalytics.MeanReturn","text":"Calculates the mean return from asset return\n\nMeanReturn(returns)\n\nArguments:     R: column(s) of TSFrame object of asset returns\n\nOutput:     - NamedArray Notes:     -\n\nIssues:     - Doesn't work in presense of NAs or missing values. Will be fixed in the next release\n\nTo do:     - \n\n\n\n\n\n","category":"method"},{"location":"functions.html#PortfolioAnalytics.Moments-Tuple{TSFrames.TSFrame}","page":"Functions","title":"PortfolioAnalytics.Moments","text":"Calculates the (statistical) moments of asset returns\n\nMoments(R)\n\nArguments:     R: column(s) of TSFrame object of asset returns\n\nOutput:     - NamedArray, rows: moments, columns: tickers Notes:     - Kurtosis: excess kurtosis\n\nIssues:     - Doesn't work in presense of NAs or missing values. Will be fixed in the next release\n\nTo do:     - \n\n\n\n\n\n","category":"method"},{"location":"functions.html#PortfolioAnalytics.PortfolioOptimize-Tuple{TSFrames.TSFrame}","page":"Functions","title":"PortfolioAnalytics.PortfolioOptimize","text":"Calculates the optimal Portfolio weights for minumum-variance portfolio\n\nPortfolioOptimize(returns[2:13])\n\nArguments:     R: columns of TSFrame object of asset returns\n\nOutput:     - Named Tuple         - 1, preturn : portfolio mean return         - 2, pvar: portfolio variable         - 3, pweights: optimal portfolio weights for minumum variance portfolio Notes:     -\n\nIssues:     - Doesn't work in presense of NAs or missing values. Will be fixed in the next release\n\nTo do:     - Maximize SharpeRatio     - Custom constraints     - NamedArray to be used for weights\n\n\n\n\n\n","category":"method"},{"location":"functions.html#PortfolioAnalytics.PortfolioReturn","page":"Functions","title":"PortfolioAnalytics.PortfolioReturn","text":"Calculates portfolio return\n\npreturns = PortfolioReturn(prices_ts, [0.4, 0.4, 0.2])\n\nArguments:     - price: column(s) of TSFrame object of asset prices     - weights: weights of assets of type Vector{Float64}     - period: Period, Int\n\nOutput:     - TSFrame object, missing period is automatically removed\n\nNotes:     -\n\nIssues:     -\n\nTo do:     - Rebalancing to be added\n\n\n\n\n\n","category":"function"},{"location":"functions.html#PortfolioAnalytics.Return","page":"Functions","title":"PortfolioAnalytics.Return","text":"Return(price::TSFrame, period::Int=1)\n\nCalculates returns form asset prices\n\nArguments:     - price: column(s) of TSFrame object of asset prices     - period: period, Int\n\nOutput:     - TSFrame object, missing period is automatically removed\n\nNotes:     - This function does not calculate the portfolio return. Portfolio return is calcuated by PortfolioReturn function.\n\nIssues:     -\n\nTo do:     - \n\n\n\n\n\n","category":"function"},{"location":"functions.html#PortfolioAnalytics.SharpeRatio","page":"Functions","title":"PortfolioAnalytics.SharpeRatio","text":"Calculates Sharpe Ratio\n\npreturns_ts = TSFrame(preturns[2:end])\nSharpeRatio(preturns_ts)\n\nArguments:     - R: column(s) of TSFrame object of asset returns     - Rf: Risk free rate, default = 0\n\nOutput:     - NamedArray\n\nNotes:     - \n\nIssues:     - It does not accept the missing values. Will be fixed in the next release.     - Needs to be passed single column only. if multiple columns are passed it will be calculaing one single SharpeRatio which is wrong. Will be fixed in the next release.\n\nTo do:     - \n\n\n\n\n\n","category":"function"},{"location":"functions.html#PortfolioAnalytics.VaR","page":"Functions","title":"PortfolioAnalytics.VaR","text":"Calculates Value-at-Risk(VaR)\n\nArguments:     - R: column(s) of TSFrame object     - p: confidence interval, Number     - method: method of VaR calculation, default = \"historical\", available methods: \"historical\" and \"parametric\", String\n\nOutput:     - NamedArray\n\nNotes:     - \n\nIssues:     - Does not work in presense of NAs or missing vlaues. Will be fixed in the next release.\n\nTo do:     - VaR with Monte Carlo to be implemented\n\n\n\n\n\n","category":"function"},{"location":"guide.html#Guide","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"guide.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"guide.html#Development-version-(Suggested)","page":"Guide","title":"Development version (Suggested)","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> using Pkg\nPkg.add(url=\"https://github.com/doganmehmet/PortfolioAnalytics.jl\")","category":"page"},{"location":"guide.html#Stable-version","page":"Guide","title":"Stable version","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> using Pkg\njulia> Pkg.add(\"PortfolioAnalytics\")","category":"page"},{"location":"guide.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"Caution: The package is under heavy development, and the next version will differ from the current one. Installation of the dev version is suggested.","category":"page"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> using DataFrames\n\njulia> date = [\"2021-12-31\",\"2022-01-31\",\"2022-02-28\",\"2022-03-31\",\"2022-04-30\",\"2022-05-31\",\"2022-06-30\",\"2022-07-31\",\"2022-08-31\",\"2022-09-30\",\"2022-10-31\",\"2022-11-30\",\"2022-12-31\"]\njulia> TSLA = [352.26,312.24,290.14,359.2,290.25,252.75,224.47,297.15,275.61,265.25,227.54,194.7,121.82]\njulia> NFLX = [602.44,427.14,394.52,374.59,190.36,197.44,174.87,224.9,223.56,235.44,291.88,305.53,291.12]\njulia> MSFT = [336.32,310.98,298.79,308.31,277.52,271.87,256.83,280.74,261.47,232.9,232.13,255.14,241.01]\n\njulia> prices = DataFrame(date = date, TSLA = TSLA, NFLX = NFLX, MSFT = MSFT)\njulia> prices.date = Date.(prices.date, \"yyyy-mm-dd\")","category":"page"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> using TSFrames\n\njulia> prices_ts = TSFrame(prices)\n13×3 TSFrame with Date Index\n Index       TSLA     NFLX     MSFT\n Date        Float64  Float64  Float64\n───────────────────────────────────────\n 2021-12-31   352.26   602.44   336.32\n 2022-01-31   312.24   427.14   310.98\n 2022-02-28   290.14   394.52   298.79\n 2022-03-31   359.2    374.59   308.31\n 2022-04-30   290.25   190.36   277.52\n 2022-05-31   252.75   197.44   271.87\n 2022-06-30   224.47   174.87   256.83\n 2022-07-31   297.15   224.9    280.74\n 2022-08-31   275.61   223.56   261.47\n 2022-09-30   265.25   235.44   232.9\n 2022-10-31   227.54   291.88   232.13\n 2022-11-30   194.7    305.53   255.14\n 2022-12-31   121.82   291.12   241.01\n","category":"page"},{"location":"guide.html#Return()","page":"Guide","title":"Return()","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> returns = Return(prices_ts)\n13×3 TSFrame with Date Index\n Index       TSLA             NFLX             MSFT\n Date        Float64?         Float64?         Float64?\n────────────────────────────────────────────────────────────────\n 2021-12-31  missing          missing          missing\n 2022-01-31       -0.113609        -0.290983        -0.0753449\n 2022-02-28       -0.0707789       -0.0763684       -0.0391987\n 2022-03-31        0.238023        -0.0505171        0.0318618\n 2022-04-30       -0.191954        -0.491818        -0.099867\n 2022-05-31       -0.129199         0.0371927       -0.0203589\n 2022-06-30       -0.111889        -0.114313        -0.0553206\n 2022-07-31        0.323785         0.286098         0.0930966\n 2022-08-31       -0.0724886       -0.0059582       -0.06864\n 2022-09-30       -0.0375893        0.0531401       -0.109267\n 2022-10-31       -0.142168         0.239721        -0.00330614\n 2022-11-30       -0.144326         0.0467658        0.0991255\n 2022-12-31       -0.374319        -0.0471639       -0.0553814\n","category":"page"},{"location":"guide.html#PortfolioReturn()","page":"Guide","title":"PortfolioReturn()","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> preturns = PortfolioReturn(prices_ts, [0.4, 0.4, 0.2])\n13-element Vector{Union{Missing, Float64}}:\n   missing\n -0.17690602205121858\n -0.0666986491934299\n  0.08137474427977387\n -0.29348222886964276\n -0.040874290158098486\n -0.10154508259254014\n  0.262572584168498\n -0.0451067428577845\n -0.015633067758222274\n  0.03836021460141191\n -0.019199093251286613\n -0.17966963603703354","category":"page"},{"location":"guide.html#SharpeRatio()","page":"Guide","title":"SharpeRatio()","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"julia> preturns_ts = TSFrame(preturns[2:end]) # converting it to TSFrame otherwise SharpeRatio does not work. it will be fixed in the next release\n12×1 TSFrame with Int64 Index\n Index  x1\n Int64  Float64?\n───────────────────\n     1  -0.176906\n     2  -0.0666986\n     3   0.0813747\n     4  -0.293482\n     5  -0.0408743\n     6  -0.101545\n     7   0.262573\n     8  -0.0451067\n     9  -0.0156331\n    10   0.0383602\n    11  -0.0191991\n    12  -0.17967\n\njulia> SharpeRatio(preturns_ts)\n-0.3281102588233226","category":"page"},{"location":"guide.html#Var()","page":"Guide","title":"Var()","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"\"\"\"\nArguments:\n    - R: a vector, column of TSFrame, or column of DataFrame object of asset returns\n    - p: confidence interval\n    - method: default = \"historical\", available methods: \"historical\" and \"parametric\" \n\"\"\"\n\n# historical\njulia> VaR(preturns_ts[:,1], 0.95, \"historical\")\n-0.23088530281170763\n\n# parametric\njulia> VaR(preturns_ts[:,1], 0.95, \"parametric\")\n-0.27901206097437814","category":"page"},{"location":"guide.html#PortfolioOptimize()","page":"Guide","title":"PortfolioOptimize()","text":"","category":"section"},{"location":"guide.html","page":"Guide","title":"Guide","text":"\n\"\"\"\nArguments:\n    R: columns of TSFrame, or columns of DataFrame object of asset returns\n\nOutput:\n    - is a 3-element tupple\n        - first element is portfolio mean return\n        - second is portfolio variance\n        - third is optimal weights\n\"\"\"\n\njulia> PortfolioOptimize(returns[2:13])\n\nEXIT: Optimal Solution Found.\n(-0.025216712326596998, 0.06893199595428622, [1.4616864319901446e-7, 5.319947696629003e-8, 0.9999998006318798])","category":"page"},{"location":"index.html#PortfolioAnalytics.jl","page":"Introduction","title":"PortfolioAnalytics.jl","text":"","category":"section"},{"location":"index.html#Tool-for-Quantitative-Portfolio-Analytics","page":"Introduction","title":"Tool for Quantitative Portfolio Analytics","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Inspired by PerformanceAnalytics and PortoflioAnalytics packages in R, pyfolio in Python, PortfolioAnalytics.jl aims to provide users with functionality for performing portfolio analytics.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"PortfolioAnalytics.jl is minimal now, but it is under heavy development. ","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The following functions are available:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Return()\nPortfolioReturn()\nSharpeRatio()\nVaR()\nPortfolioOptimize()","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"On the pipe:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"MeanReturns()\nMoments()\nExpectedShortfall()","category":"page"},{"location":"index.html#Contributions-are-most-welcome","page":"Introduction","title":"Contributions are most welcome","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"We greatly value contributions of any kind. Contributions could include but are not limited to documentation improvements, bug reports, new or improved code, scientific and technical code reviews, infrastructure improvements, mailing lists, chat participation, community help/building, education, and outreach.","category":"page"},{"location":"index.html#Bug-reports","page":"Introduction","title":"Bug reports","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Please report any issues via the GitHub issue tracker. All kinds of issues are welcome and encouraged; this includes bug reports, documentation typos, feature requests, etc.","category":"page"}]
}
